[{"/home/dataexim/Documents/login_task_JWT/client/src/index.js":"1","/home/dataexim/Documents/login_task_JWT/client/src/App.js":"2","/home/dataexim/Documents/login_task_JWT/client/src/Home.jsx":"3","/home/dataexim/Documents/login_task_JWT/client/src/Signup.jsx":"4","/home/dataexim/Documents/login_task_JWT/client/src/Signin.jsx":"5","/home/dataexim/Documents/login_task_JWT/client/src/PagenotFound.jsx":"6","/home/dataexim/Documents/login_task_JWT/client/src/Navbar.jsx":"7","/home/dataexim/Documents/login_task_JWT/client/src/Dashboard.jsx":"8"},{"size":170,"mtime":1640851165947,"results":"9","hashOfConfig":"10"},{"size":979,"mtime":1640936984373,"results":"11","hashOfConfig":"10"},{"size":694,"mtime":1638785275790,"results":"12","hashOfConfig":"10"},{"size":7447,"mtime":1640935869731,"results":"13","hashOfConfig":"10"},{"size":2389,"mtime":1640936065121,"results":"14","hashOfConfig":"10"},{"size":287,"mtime":1638791132788,"results":"15","hashOfConfig":"10"},{"size":756,"mtime":1640868627221,"results":"16","hashOfConfig":"10"},{"size":3808,"mtime":1640937156213,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1dhnsza",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dataexim/Documents/login_task_JWT/client/src/index.js",[],["36","37"],"/home/dataexim/Documents/login_task_JWT/client/src/App.js",[],"/home/dataexim/Documents/login_task_JWT/client/src/Home.jsx",[],"/home/dataexim/Documents/login_task_JWT/client/src/Signup.jsx",["38"],"import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios'\nimport { TextField } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport sideImg from \"../src/employee.jpg\";\nimport { Form, Button } from \"antd\";\nimport { useFormik } from \"formik\";\nimport queryString from 'query-string';\n\nconst Signup = () => {\n    //navigate the page\n    const history = useHistory();\n    //for store the edited user data\n    const [editedData, seteditedData] = useState([])\n    //gert edited user id\n    const { id } = queryString.parse(window.location.search)\n\n    //use UseFormik\n    const formik = useFormik({\n        initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            contact: \"\",\n            profession: \"\",\n            salary: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        },\n\n        onSubmit: (values) => {\n            //update the user data\n            if (id) {\n                Axios.put(`/updateEmployee/${id}`, values)\n                    .then(() => {\n                        history.push('/Dashboard');\n                    })\n                    .catch(err => {\n                        console.log(\"error: \" + err)\n                    })\n            }\n            //add new user\n            else {\n\n                Axios.post(`/addEmployee`, values)\n                    .then((res) => {\n                        console.log(\"values\", values);\n\n                        alert(\"Registration Successfully\");\n                        history.push('/dashboard');\n                    })\n                    .catch(err => {\n                        alert(\"Invalid Registration\");\n                        console.log(err)\n                    })\n            }\n        }\n    });\n\n    //for getting the edited user data\n    useEffect(() => {\n        if (id) {\n            Axios.get(`/getEmployee/${id}`)\n                .then(res => {\n                    seteditedData(res.data);\n                })\n                .catch(err => {\n                    console.log(\"error: \" + err);\n                })\n        }\n    }, [id]);\n\n\n    //set inputfield when editedData state changed\n    useEffect(() => {\n        if (id && editedData) {\n            formik.setValues(editedData)\n        }\n    }, [editedData])\n\n\n\n    return (\n        <>\n            <div className=\"main-div\">\n                <form className=\"signupUser\" onSubmit={formik.handleSubmit}>\n                    <h2>\n                        <strong>EMPLOYEE REGISTRATION</strong>\n                    </h2>\n                    <h3>Please fill in this form to create an account</h3>\n                    <TextField\n                        label=\"First Name\"\n                        variant=\"standard\"\n                        name=\"firstName\"\n                        type=\"text\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.firstName}\n                    />\n                    <TextField\n                        label=\"Last Name\"\n                        variant=\"standard\"\n                        name=\"lastName\"\n                        type=\"text\"\n\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.lastName}\n                    />\n                    <TextField\n                        label=\"Email\"\n                        variant=\"standard\"\n                        name=\"email\"\n                        type=\"email\"\n\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                    <TextField\n                        label=\"Contact\"\n                        variant=\"standard\"\n                        name=\"contact\"\n                        type=\"number\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.contact}\n                    />\n                    <TextField\n                        label=\"profession\"\n                        variant=\"standard\"\n                        name=\"profession\"\n                        type=\"text\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.profession}\n                    />\n                    <TextField\n                        label=\"salary\"\n                        variant=\"standard\"\n                        name=\"salary\"\n                        type=\"number\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.salary}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        variant=\"standard\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                    <TextField\n                        label=\"Confirm Password\"\n                        variant=\"standard\"\n                        name=\"confirmPassword\"\n                        required\n                        type=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.confirmPassword}\n                    />\n\n                    <div className=\"Bottom-class\">\n                        {!id ?\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    className=\"signup-btn\"\n                                // onClick={settoggleButton(true)}\n                                >\n                                    ADD\n                                </Button>\n                            </Form.Item>\n                            : (\n                                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className=\"signup-btn\"\n                                    // onClick={settoggleButton(false)}\n                                    // onClick={() => dispatch(updateSelectedUserdata())}\n                                    >\n                                        UPDATE\n                                    </Button>\n                                </Form.Item>\n                            )}\n\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button type=\"danger\" onClick={formik.handleReset}>\n                                RESET\n                            </Button>\n                        </Form.Item>\n                    </div>\n                    <NavLink to=\"/Signin\">I have already Registered</NavLink>\n                </form>\n\n                <div className=\"Side-image\">\n                    <img className=\"img\" src={sideImg} alt=\"side view\" />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Signup;","/home/dataexim/Documents/login_task_JWT/client/src/Signin.jsx",[],"/home/dataexim/Documents/login_task_JWT/client/src/PagenotFound.jsx",[],"/home/dataexim/Documents/login_task_JWT/client/src/Navbar.jsx",[],"/home/dataexim/Documents/login_task_JWT/client/src/Dashboard.jsx",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":80,"column":8,"nodeType":"47","endLine":80,"endColumn":20,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":19,"nodeType":"51","messageId":"52","endLine":2,"endColumn":30},{"ruleId":"49","severity":1,"message":"53","line":8,"column":22,"nodeType":"51","messageId":"52","endLine":8,"endColumn":33},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'setTempList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [editedData, formik, id]",{"range":"59","text":"60"},[2322,2334],"[editedData, formik, id]"]